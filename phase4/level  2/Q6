يمكن استخدام Django Signals لتحديد إجراءات يجب تنفيذها عند حدوث حالة معينة في تطبيق Django. على سبيل المثال، يمكن استخدام Signals لتحديد إجراء يجب تنفيذه عند إضافة عنصر جديد إلى قاعدة البيانات.

مثال: إرسال إشعار عند إضافة عنصر جديد

نحن نريد إرسال إشعار عند إضافة عنصر جديد إلى قاعدة البيانات. لتحقيق ذلك، سنستخدم Signal post_save الذي يتم تشغيله بعد إضافة عنصر جديد إلى قاعدة البيانات.

تعريف Signal

في الملف models.py في التطبيق الذي ترغب في استخدام Signal، أضف تعريفًا للSignal:
from django.db.models.signals import post_save
from django.dispatch import receiver
from .models import نموذج_الاستقبال

@receiver(post_save, sender=نموذج_الاستقبال)
def إرسال_إشعار_عند_إضافة_عنصر_جديد(sender, instance, created, **kwargs):
    if created:
        # إرسال إشعار
        print("عنصر جديد تم إضافته إلى قاعدة البيانات")
في هذا المثال، Signal post_save يتم تشغيله بعد إضافة عنصر جديد إلى قاعدة البيانات. إذا كان العنصر جديدًا (created=True)، فإن إجراء إرسال_إشعار_عند_إضافة_عنصر_جديد يتم تنفيذه.

تعريف نموذج

في الملف models.py في التطبيق الذي ترغب في استخدام Signal، أضف تعريفًا للنموذج الذي ترغب في إرسال إشعار عند إضافته:
from django.db import models

class نموذج_الاستقبال(models.Model):
    الاسم = models.CharField(max_length=255)
    البريد_الإلكتروني = models.EmailField()
    الرقم_الخليوي = models.IntegerField()
إضافة عنصر جديد

إذا قمت بزيارة عنوان URL /admin/ في متصفحك واضافة عنصر جديد إلى قاعدة البيانات، فإن Signal post_save سيتم تشغيله بعد إضافة العنصر الجديد. إذا كان العنصر جديدًا، فإن إجراء إرسال_إشعار_عند_إضافة_عنصر_جديد سيتم تنفيذه، وسيتم إرسال إشعار إلى konzole.