يمكن إضافة صفحة تفاعلية باستخدام Django Forms عن طريق تطبيق الخطوات التالية:

1. تعريف النموذج: في الملف forms.py في التطبيق الذي ترغب في إنشاء نموذج، أضف تعريفًا للنموذج. على سبيل المثال:
  
from django import forms

class نموذج_الاستقبال(forms.Form):
    الاسم = forms.CharField(max_length=255)
    البريد_الإلكتروني = forms.EmailField()
    الرقم_الخليوي = forms.IntegerField()
   في هذا المثال، النموذج نموذج_الاستقبال يحتوي على ثلاثة поля: الاسم, البريد_الإلكتروني, والرقم_الخليوي.
2. تعريف صفحة تعرض النموذج: في الملف views.py في التطبيق الذي ترغب في إنشاء صفحة تعرض النموذج، أضف تعريفًا لصفحة تعرض النموذج. على سبيل المثال:
  
from django.shortcuts import render
from .forms import نموذج_الاستقبال

def عرض_النموذج(request):
    if request.method == 'POST':
        النموذج = نموذج_الاستقبال(request.POST)
        if النموذج.is_valid():
            # استقبال البيانات
            الاسم = النموذج.cleaned_data['الاسم']
            البريد_الإلكتروني = النموذج.cleaned_data['البريد_الإلكتروني']
            الرقم_الخليوي = النموذج.cleaned_data['الرقم_الخليوي']
            # تخزين البيانات في قاعدة البيانات
            # ...
    else:
        النموذج = نموذج_الاستقبال()
    return render(request, 'الصفحة_التي_تعرض_النموذج.html', {'النموذج': النموذج})
   في هذا المثال، الصفحة عرض_النموذج تعرض النموذج نموذج_الاستقبال للمستخدم. إذا قام المستخدم بملء النموذج وتحديث الصفحة، فإن الصفحة تعيد تعرض النموذج مع أي أخطاء.
3. تعريف صفحة تعرض النموذج: في الملف templates في المشروع، أضف تعريفًا لصفحة تعرض النموذج. على سبيل المثال:
  
<!-- templates/الصفحة_التي_تعرض_النموذج.html -->
{% extends 'base.html' %}

{% block content %}
  <h1>إدخال البيانات</h1>
  <form method="post">
    {% csrf_token %}
    {{ نموذج.as_p }}
    <button type="submit">إرسال</button>
  </form>
{% endblock %}
   في هذا المثال، الصفحة الصفحة_التي_تعرض_النموذج.html تعرض النموذج نموذج_الاستقبال مع أي أخطاء.

إذا قمت بزيارة عنوان URL الذي يرتبط إلى صفحة تعرض النموذج، فإنك ستعرض النموذج للمستخدم ويمكنه ملؤه وتحديث الصفحة.